<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>语法糖的博客</title>
  
  <subtitle>爱动漫，热爱LOL</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-25T09:55:34.784Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>chenye2017</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>window下运行各种框架总结</title>
    <link href="http://yoursite.com/2017/11/25/window%E4%B8%8B%E8%BF%90%E8%A1%8C%E5%90%84%E7%A7%8D%E6%A1%86%E6%9E%B6%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/11/25/window下运行各种框架总结/</id>
    <published>2017-11-25T09:53:43.000Z</published>
    <updated>2017-11-25T09:55:34.784Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章主要是<strong>对于php运行环境的搭建中运行起来框架的总结，其实运行框架，不管是yii，还是tp，还是laravel，还是我们那个项目框架，与其说是运行起来，不如</strong>说是找到框架的入口文件<strong>，然后剩下的就直接交给了框架进行处理（route.php的处理，restful api等等，通过解析模块，控制器，方法），绝大部分时候就这这么简单，至少上面三个都不用对</strong>apache**进行特殊的配置（目前的这篇文章只是单纯的针对Apache）。</p><a id="more"></a><p>so，简化的思考了一下，就是找public下面的index.php 文件（tp  laravel都是这个文件 yii是在web目录下，其实找一下就行了，大部分都是reqire项目的核心库这种东西。例如yii</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line"></div><div class="line">// comment out the following two lines when deployed to production</div><div class="line">defined(&apos;YII_DEBUG&apos;) or define(&apos;YII_DEBUG&apos;, true);</div><div class="line">defined(&apos;YII_ENV&apos;) or define(&apos;YII_ENV&apos;, &apos;dev&apos;);</div><div class="line"></div><div class="line">require(__DIR__ . &apos;/../vendor/autoload.php&apos;);</div><div class="line">require(__DIR__ . &apos;/../vendor/yiisoft/yii2/Yii.php&apos;);</div><div class="line"></div><div class="line">$config = require(__DIR__ . &apos;/../config/web.php&apos;);</div><div class="line"></div><div class="line">(new yii\web\Application($config))-&gt;run();</div></pre></td></tr></table></figure><p>），所以只要配置好了一个环境，剩下的框架的运行基本就一样了。<br>上面已经说了我们这片文章的目的了，运行起来框架，通过的是直接下载代码的这种方式（现在绝大部分框架都是支持composer来安装），我们先安装好xampp，xampp会帮我们集成安装好apache和mysql，他们和在linux下是一样的，至少我到现在还没有发现什么不同，so，因为太过相似了，导致我从前以为xampp是在window环境下集成安装了lamp这种，其实这个l（linux是没有的），他的环境准确说是wamp（我代表 window这种架构）。他把php，mysql还有apache都放在了他自己也就是xampp的安装目录下，我们找到apache的安装目录，在conf文件夹里面找到（httpd-vhosts.conf）这个配置虚拟域名的文件，我记得以前apache配置虚拟域名是在一块的，都是写在httpd.conf文件里面，现在分开了，其实是包含了conf文件下的所有文件，但这样更清楚。<br>接下来我们就开始配置虚拟主机了（意思就是在一个服务器上配置多域名访问的站点，其实端口号啊什么的都可以，本质上就是把不同的请求分发到不同的目录下）。<br>添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;VirtualHost *:800&gt;</div><div class="line">    ##ServerAdmin webmaster@dummy-host2.example.com</div><div class="line">    ##DocumentRoot &quot;D:/xampp/htdocs/dummy-host2.example.com&quot;</div><div class="line">    ##ServerName dummy-host2.example.com</div><div class="line">    ##ErrorLog &quot;logs/dummy-host2.example.com-error.log&quot;</div><div class="line">    ##CustomLog &quot;logs/dummy-host2.example.com-access.log&quot; common</div><div class="line">     DocumentRoot &quot;D:\code\laravel-v5.1.11\laravel-v5.1.11\public&quot;  </div><div class="line">    ServerName laravel.app  </div><div class="line">        &lt;Directory &quot;D:\code\laravel-v5.1.11\laravel-v5.1.11\public&quot;&gt;  </div><div class="line">            Options Indexes FollowSymLinks Includes ExecCGI  </div><div class="line">            AllowOverride All  </div><div class="line">            Require all granted  </div><div class="line">        &lt;/Directory&gt;</div><div class="line">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure></p><p>简单的记录下apache的语法 DocumentRoot 代表根目录<br>配置虚拟域名要写在virtualHost标签之间，后面的代表端口号，servername代表域名，directory里面allow代表接受任何的请求，之前安装larave的时候代开index.php嫌弃我权限不够，其实是这个directory标签的内容写错了，注意这个如果说打开文件夹没有权限，在window下你改这个目录的什么所有者权限啊什么都是没用的，我的理解是web请求的时候打开这个文件夹的用户不是我们能预测的，应该是other什么的，因为加了这句话，所以我们在window下安装这些框架不用修改日志文件，要么在linux下安装yii，laravel都要修改log日志文件夹的权限（感觉是因为写日志的操作是来自http的请求，像我们之前安装seaslog第三方的日志的时候，也得修改那个文件夹的权限，道理是一样的）<br>（yii框架的话conf文佳佳下web.php cookiekey要随便填一个数，）</p><p>当然还要配置个虚拟域名，因为之前apache里面填写的域名如果是假的话，在本地host文件里面配置一下（因为浏览器解析是通过缓存（贼端）host文件，dns解析来找的，配置之后ping一下能不能同，就可以啦）</p><p>大功告成。</p><p>总结一下,本机运行起来一个框架。</p><p>1.安装集成环境（xampp）<br>2.修改apache配置文件，配置虚拟主机<br>3.修改host文件，修改域名到本机127.0.0.1</p><p>注意的点：<br>1.配置虚拟主机之后，xampp原先那个localhost直接就访问不了了，所以把那个localhost也配置一个虚拟主机（localhost也属于一个域名）<br>2.如果访问不了，先ping一下域名，看是否能ping通，然后查看apache的access日志和error日志，如果没有，确认http服务是否起起来了，如果有查看日志（linux下tail -f 动态看），window下在文件的最下面，像我现在这个window下环境，就是因为端口号被占了，改成800，所以每次访问域名后面都得加 ： 800，这个Apache的错误日志里面会记录的很清楚</p><p>附上三张框架图<br>1.<img src="http://ozys8fka7.bkt.clouddn.com/TIM%E5%9B%BE%E7%89%8720171125172354.png" alt="laravel"><br>2.<img src="http://ozys8fka7.bkt.clouddn.com/TIM%E5%9B%BE%E7%89%8720171125172431.png" alt="yii2"></p><p>(其实在用外链的时候想到了树洞外链，GitHub上一个关于php的开源项目)<br>对了突然想起来yaf框架，其实因为yaf框架是需要扩展模块支持，所以得先安装php扩展（php扩展大部分都是c开发的，），然后原理是一样的（只是yaf框架需要手动生成基本目录）</p><p><a href="http://blog.csdn.net/underclound/article/details/76835318" target="_blank" rel="external">地址</a></p><p>简单记录下window下安装php扩展（phpinfo能输出php的详细信息，在框架的index.php目录下是唯一所有人都能访问的）然后去pecl下载php扩展，下载dll文件的时候要注意那个什么tc之类的，注意好，下载好放在php的扩展目录下ext，再在php.ini 里面模仿之前的php扩展，加上相应的话就好了，那个扩展还是可以配置一些属性的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zend_extension = D:\xampp\php\ext\php_xdebug-2.5.4-7.0-vc14.dll</div></pre></td></tr></table></figure></p><p>像mysql这种，都是可以添加配置信息的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[MSSQL]</div><div class="line">mssql.allow_persistent=On</div><div class="line">mssql.max_persistent=-1</div><div class="line">mssql.max_links=-1</div><div class="line">mssql.min_error_severity=10</div><div class="line">mssql.min_message_severity=10</div><div class="line">mssql.compatability_mode=Off</div><div class="line">mssql.secure_connection=Off</div></pre></td></tr></table></figure></p><p>yaf好像不配置，不能再生产环境下用，有个参数</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章主要是&lt;strong&gt;对于php运行环境的搭建中运行起来框架的总结，其实运行框架，不管是yii，还是tp，还是laravel，还是我们那个项目框架，与其说是运行起来，不如&lt;/strong&gt;说是找到框架的入口文件&lt;strong&gt;，然后剩下的就直接交给了框架进行处理（route.php的处理，restful api等等，通过解析模块，控制器，方法），绝大部分时候就这这么简单，至少上面三个都不用对&lt;/strong&gt;apache**进行特殊的配置（目前的这篇文章只是单纯的针对Apache）。&lt;/p&gt;
    
    </summary>
    
      <category term="php" scheme="http://yoursite.com/categories/php/"/>
    
    
      <category term="linux apache 框架 php" scheme="http://yoursite.com/tags/linux-apache-%E6%A1%86%E6%9E%B6-php/"/>
    
  </entry>
  
  <entry>
    <title>11.25</title>
    <link href="http://yoursite.com/2017/11/25/11-25/"/>
    <id>http://yoursite.com/2017/11/25/11-25/</id>
    <published>2017-11-25T09:47:21.000Z</published>
    <updated>2017-11-25T09:52:36.717Z</updated>
    
    <content type="html"><![CDATA[<p>感觉七牛云和我们公司的产品datrix做的东西是一样的，都是用来做存储的，还有树洞外链（GitHub上一个php star很高的项目）</p><p>hexo server -port 4000 启动服务器，因为我改了端口，导致得换端口</p><p>hexo  g 产生静态文件</p><p>hexo c  清理缓存</p><p>hexo d 部署到github上</p><p>注意经常写好了，命名没问题，但是本地测试显示不出来，其实有时候是type那个save快捷键的问题，手动点击保存</p><p>还有经常显示不出来都是语法啊什么问题（md语法），不要总怀疑缓存，服务器，注意下md语法和是否保存好了，刷新就可以了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;感觉七牛云和我们公司的产品datrix做的东西是一样的，都是用来做存储的，还有树洞外链（GitHub上一个php star很高的项目）&lt;/p&gt;
&lt;p&gt;hexo server -port 4000 启动服务器，因为我改了端口，导致得换端口&lt;/p&gt;
&lt;p&gt;hexo  g 产生静
      
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="hexo datrix 七牛云 存储" scheme="http://yoursite.com/tags/hexo-datrix-%E4%B8%83%E7%89%9B%E4%BA%91-%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法使用记录</title>
    <link href="http://yoursite.com/2017/11/16/markdown%E8%AF%AD%E6%B3%95%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2017/11/16/markdown语法使用记录/</id>
    <published>2017-11-15T16:07:55.000Z</published>
    <updated>2017-11-25T09:56:31.663Z</updated>
    
    <content type="html"><![CDATA[<ol><li>关于段落，不用使用 <code>&lt;p&gt;</code> 直接使用换行</li><li>关于首行缩进中文两字符 <code>&amp;emsp</code> 后面加上 ; 代表缩进一个，因为这个; 如果直接写在&amp;emsp 后面会直接不显示，所以我分开来写</li><li>如果是英文字符，肯定就是 <code>&amp;nbsp</code> 啦</li><li><code>*** ***</code> 两个星号之间的内容是加粗, <code>** **</code> 代表泄题</li><li>`` 两个点好之间代表标记，比如我这上面想显示的md标记都是放在标签里面显示出来</li><li>有序列表的话 <code>1.</code> 空格后会自动生成列表，以后想生成下一个列表，自动换行就可以了，不用一个个手敲</li><li><code>``` </code> 代表下面的内容是代码块，结束也是 ```</li><li><code>[]()</code> 插入超链接，中括号里面是要显示的文本内容， <code>！[]()</code>插入图片，[]也是文本内容</li><li><code>&lt;!--more--&gt;</code>nexo 产生阅读全文的按钮</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;关于段落，不用使用 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 直接使用换行&lt;/li&gt;
&lt;li&gt;关于首行缩进中文两字符 &lt;code&gt;&amp;amp;emsp&lt;/code&gt; 后面加上 ; 代表缩进一个，因为这个; 如果直接写在&amp;amp;emsp 后面会直接不显示，所以
      
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="markdown 语法 文档 工具" scheme="http://yoursite.com/tags/markdown-%E8%AF%AD%E6%B3%95-%E6%96%87%E6%A1%A3-%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>写博客的原因</title>
    <link href="http://yoursite.com/2017/11/15/%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%8E%9F%E5%9B%A0/"/>
    <id>http://yoursite.com/2017/11/15/写博客的原因/</id>
    <published>2017-11-15T15:36:12.000Z</published>
    <updated>2017-11-15T16:06:47.709Z</updated>
    
    <content type="html"><![CDATA[<p>  之前学习hexo建站的原因很简单，一个朋友弄过，当第一次见得时候很好奇，好像是被h5那个背景图所吸引，还有一点就是相比于wordpress他更大方，更感觉是现代化的产物。随着进一步的了解，相比于wordpress他不用主机，对于我这种穷人来说就更有好啦，哈哈哈，而且还能在GitHub上混commit。</p><p>  但当我建出这个小站的时候，我却发现不知道写什么，难道纯粹是为了面试的时候简历上有个博客地址博取好感，感觉仅仅因为这个去经常写些文章花费太大，有些人说生活笔记，关于笔记我用的Evernote，这个随时随地都能同步，没有必要非得用这个。</p><p>  但不久之后我发现在学习的过程中我虽然记了很多的笔记，但我从来没有去总结，<strong>我的总结都是通过第二次第三次第四次去再次碰到这个问题</strong>，再去解决，而学会的这个问题，所以我觉得我这种记笔记的方法从根本上说并不是记笔记，而是自我安慰，所以<strong>我想通过写博客总结我写过的笔记，进行进一步的加工，还有列出关键的点，这样还能方便平时自己对问题的快速查找，这是我写博客的初衷，当然分享也是其中一点，希望如果有朋友能看见，能指出我的不足，或者我写的东西很方便的帮你找到了答案，这也是我最希望看到的</strong>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  之前学习hexo建站的原因很简单，一个朋友弄过，当第一次见得时候很好奇，好像是被h5那个背景图所吸引，还有一点就是相比于wordpress他更大方，更感觉是现代化的产物。随着进一步的了解，相比于wordpress他不用主机，对于我这种穷人来说就更有好啦，哈哈哈，而且还能
      
    
    </summary>
    
      <category term="杂谈" scheme="http://yoursite.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="编程 职业 生活" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B-%E8%81%8C%E4%B8%9A-%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/10/25/hello-world/"/>
    <id>http://yoursite.com/2017/10/25/hello-world/</id>
    <published>2017-10-25T01:00:25.950Z</published>
    <updated>2017-10-25T01:00:25.950Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
